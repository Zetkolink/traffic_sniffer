package main

import (
	"testing"

	"github.com/google/gopacket"
	"github.com/google/gopacket/layers"
)

var packets = [][]byte{
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 69, 0, 0, 60, 219, 28, 64, 0, 64, 6, 97, 157, 127, 0,
		0, 1, 127, 0, 0, 1, 172, 226, 1, 187, 75, 92, 12, 71, 0, 0, 0, 0, 160, 2, 255, 215, 254, 48,
		0, 0, 2, 4, 255, 215, 4, 2, 8, 10, 123, 178, 242, 219, 0, 0, 0, 0, 1, 3, 3, 7},

	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 69, 0, 0, 52, 219, 29, 64, 0, 64, 6, 97,
		164, 127, 0, 0, 1, 127, 0, 0, 1, 172, 226, 1, 187, 75, 92, 12, 72, 189, 92, 187,
		165, 128, 16, 2, 0, 254, 40, 0, 0, 1, 1, 8, 10, 123, 178, 242, 219, 123, 178, 242, 219},

	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 69, 0, 2, 57, 219, 30, 64, 0, 64, 6, 95, 158, 127,
		0, 0, 1, 127, 0, 0, 1, 172, 226, 1, 187, 75, 92, 12, 72, 189, 92, 187, 165, 128, 24, 2, 0,
		0, 46, 0, 0, 1, 1, 8, 10, 123, 178, 242, 238, 123, 178, 242, 219, 22, 3, 1, 2, 0, 1, 0, 1,
		252, 3, 3, 15, 85, 210, 100, 41, 203, 133, 235, 4, 254, 234, 100, 63, 138, 1, 44, 182,
		214, 121, 103, 38, 101, 11, 136, 110, 137, 157, 60, 180, 187, 47, 223, 32, 34, 198,
		136, 78, 121, 117, 113, 140, 18, 37, 204, 246, 97, 85, 246, 225, 62, 174, 250, 103,
		251, 58, 130, 236, 216, 228, 98, 153, 119, 169, 107, 30, 0, 62, 19, 2, 19, 3, 19, 1,
		192, 44, 192, 48, 0, 159, 204, 169, 204, 168, 204, 170, 192, 43, 192, 47, 0, 158,
		192, 36, 192, 40, 0, 107, 192, 35, 192, 39, 0, 103, 192, 10, 192, 20, 0, 57, 192, 9,
		192, 19, 0, 51, 0, 157, 0, 156, 0, 61, 0, 60, 0, 53, 0, 47, 0, 255, 1, 0, 1, 117, 0, 0, 0,
		14, 0, 12, 0, 0, 9, 108, 111, 99, 97, 108, 104, 111, 115, 116, 0, 11, 0, 4, 3, 0, 1, 2, 0,
		10, 0, 12, 0, 10, 0, 29, 0, 23, 0, 30, 0, 25, 0, 24, 51, 116, 0, 0, 0, 16, 0, 14, 0, 12, 2, 104,
		50, 8, 104, 116, 116, 112, 47, 49, 46, 49, 0, 22, 0, 0, 0, 23, 0, 0, 0, 13, 0, 48, 0, 46, 4,
		3, 5, 3, 6, 3, 8, 7, 8, 8, 8, 9, 8, 10, 8, 11, 8, 4, 8, 5, 8, 6, 4, 1, 5, 1, 6, 1, 3, 3, 2, 3, 3,
		1, 2, 1, 3, 2, 2, 2, 4, 2, 5, 2, 6, 2, 0, 43, 0, 9, 8, 3, 4, 3, 3, 3, 2, 3, 1, 0, 45, 0, 2, 1, 1,
		0, 51, 0, 38, 0, 36, 0, 29, 0, 32, 101, 62, 62, 186, 247, 119, 88, 15, 140, 231, 176,
		253, 86, 229, 208, 157, 52, 184, 171, 249, 113, 36, 164, 226, 74, 242, 54, 252, 90,
		16, 45, 119, 0, 21, 0, 184, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
}

func ExamplePacket() {
	sn, _ := NewSniffer("lo")
	packet := gopacket.NewPacket(packets[0], layers.LinkTypeEthernet, gopacket.NoCopy)
	sn.handlePacket(packet)

	// Output: 127.0.0.1,44258,127.0.0.1,443(https),5
}

func TestTCP(t *testing.T) {
	sn, _ := NewSniffer("lo")
	packet := gopacket.NewPacket(packets[1], layers.LinkTypeEthernet, gopacket.NoCopy)
	tcp := sn.resolveTCPParams(packet)

	if tcp.CountOptions != 3 {
		t.Error("[TCP_OPTIONS] Expected 3, got ", tcp.CountOptions)
	}

	if tcp.SRC != "44258" {
		t.Error("[TCP_SRC] Expected 44258, got ", tcp.SRC)
	}

	if tcp.DST != "443(https)" {
		t.Error("[TCP_DST] Expected 443(https), got ", tcp.DST)
	}
}

func TestIP(t *testing.T) {
	sn, _ := NewSniffer("lo")
	packet := gopacket.NewPacket(packets[2], layers.LinkTypeEthernet, gopacket.NoCopy)
	ip := sn.resolveIPParams(packet)

	if ip.SRC != "127.0.0.1" {
		t.Error("[IP_SRC] Expected 127.0.0.1, got ", ip.SRC)
	}

	if ip.DST != "127.0.0.1" {
		t.Error("[IP_DST] Expected 127.0.0.1, got ", ip.DST)
	}
}
